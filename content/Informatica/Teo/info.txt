INTRODUZIONE

Azienda:
Organizzazione (pubblica o privata) strutturata e organizzata sencondo lo scopo per cui è nata (mission) e per perseguire degli obiettivi generali (target).

Risorsa:
Tutto ciò con cui un'azienda opera per raggiungere i propri target e la propria mission (da materiali a persone)

Processso:
Insieme delle attività (decisioni e azioni) che l'azienda svolge per gestire il ciclo di vita di una risorsa o di un gruppo omogeneo di risorse.
Processo SW House --> analisi --> progettazione --> svilupppo --> collaudo --> installazione

Waterfall:
Analisi --> Progettazione --> Realizzazione --> Collaudo --> Manutenzione

Informazione: è la risorsa più importante. Essa riguarda tutte le altre risorse di un'azienda. E' importante che questa venga condivisa all'interno dell'organizzazione. 
Dato: 45
Cosa gli manca per essere un'informazione? la chiave di interpretazione
Info: 45 km (esempio)
Quindi l'informazione è tutto ciò che aumenta la mia conoscenza.

#############################################################################################################################################################################################################################################################################################################################################################################

TIPI DI SISTEMI

SISTEMA INFORMATIVO: è l'insieme di strumenti automatici, procedure manuali, norme organizzative, risorse umane e materiali orientato alla gestione (raccolta, archiviazione, elaborazzione e scambio) delle informazioni importanti e necessarie alle attività operative, di gestione, di preparazione, controllo e valutazione dell'organizzazione.
In pratica è tutto ciò che serve al fine di gestire le inforrmazioni necessarie al buon funzionamento dell'organizzazione.
Tutte le aziende hanno un sistema informativo (semplice o complesso).
Questo è ciò che gestisce le informazioni. ESEMPI:
- basic
Si considera team di vendita di una ditta artigianale diretta da Rossi. Non farà tantissime fatture, e avra tot clienti che richiedono un lavoro base.
Quindi il suo sistema informativo puo includere: una rubrica con info personali dei clienti, biglietti da visita, le fatture e gli ordini.
- complex
Esempio di compagnia aerea.
Qui serve avere lista e storico clienti, lista, storico e orario piloti e hostess, manutenzioni aerei, caratteristiche e lista aerei, prenotazioni, voli e passeggeri, magazzino pezzi ricambio aerei, contabilità, rifornimento e approviggionamento di kerosene per aerei, internet clienti e privato di compagnia...

Tipi di sistemi informativi:
- Ufficiale --> Ciò che l'azienda crea e predispone per consentire il flusso di informazioni in essa.
- Privato --> Informazioni che scorrono al di fuori del canale ufficiale
Tipi di informazioni:
- Formale --> info strutturate ed analizzate in modo deterministico
- Informale --> info caratterizzate dall'aleatorietà
ES: Comunicare malattia:
Formale = Modulo
Informale = telefonata

Livello di aggregazione/conservazione/filtraggio di informazioni
Le info vanno aggregate in base al livello di impiego e conservate: il loro grado di aggregazione ssegue un modello a piramide:
- Livello strategico --> dei capi, per esempio a loro interessa solo che i team leader portino i progetti in tempo
- Livello Tattico --> dei team leader, a loro interessa che i programmatori portino a termine il progetto entro un certo tempo per darlo ai capi
- Livello Operativo --> dei programmatori, a loro interessa solo programmare e venire pagati

SISTEMA INFORMATICO
E' parte del sistema informativo. E' l'insieme degli strunmenti informatici usati per il trattamento automatico delle informazioni rappresentante mediante dati digitali al fine di agevolare le funzioni del suo sistema informativo. Quindi è un sistema informaticvo che si avvale di tecnologie informatiche. Chiamato anche EDP (Electronic Data Processing)
In piccolo (ditta artigianale): potrebbe essere una rubrica elettronica dove sono salvate le info dei clienti
In grande (compagnia aerea): potrebbero essere gli archivi di dati di aerei, personale, clienti, voli... siti web e programmi che permettono prenotazioni...

APPLICAZIONE INFORMATICA
Componente del sistema informatico che vi utilizza i dati per eseguire una funzione nell'azienda.

#############################################################################################################################################################################################################################################################################################################################################################################

ARCHIVI

ARCHIVI
(gil) Luogo dove vengono archiviate informazioni necessarie all'azienza. 
(real) Raccolta organizzata di informazioni necessarie all'azienda (ed elaborabili in qualsiasi forma, sia digitali che fisiche).
Sono delle strutture dati astratte (solo di struttura, tipo per indicare suddivisioni o sort), costituita da un'insieme di record.
IMPORTANTE: le info vanno memorizzate con una logica tale che la loro consultazione sia fatta nel modo più efficiente possibile.
Ogni record all'interno dell'archivio è identificato grazie alla sua posizione, ovvero, un indirizzo logico

FILE
Sono archivi su memoria di massa. 
Un file è: insieme di registrazioni omogenee memmorizzate in una memoria di massa. 
Quindi:
E' una struttura fisica di memoria in cui si memorizzano informazioni sottoforma di sequenze di byte o record. Idoneo quindi ad essere un archivio.
Un archivio è SEMPRE implementato mediante 1 o + file. Ma un file NON è SEMPRE un archivio. (tipo exe)

RECORD: sono gli elementi che compongono un file. Un record è formato da CAMPI, ciascuno dei quali contiene un'informazione. (Quindi file come tabelle, righe = record e colonne = campi)
- Omogenei --> se sono tutti dello stesso tipo e sono nello stesso ordine

TRACCIATO RECORD
E' l'articolazione dei campi all'interno del record. Questo informa sui dati registrati nel file, sul loro tipo e sulle operazioni possibili.
Definisce:
- campi
- tipo di campi
- lunghezza del campo

Primary Key (PK)
Campo che identifica univocamente un record

Secondary/Foreign Key (FK)
campo che identifica un record nell'archivio

Record:
- Logico --> struttura che il programmatore vuole dare ai record del proprio archivio. Suddiviso in campi e di dimensione fissa (ovvero la somma della lunghezza di ciascun campo). organizzazione logica del record data da programmatore
- Fisico --> (o blocco) può contenere più record logici (in base a come SO organizza lo spazio su disco) insieme dei byte che possono essere letti o scritti in memoria con 1 singola operazione di lettura/scrittura. è come un record viene scritto in memoria

n record logici = 1 record fisico

ORGANIZZAZIONE DEGLI ARCHIVI
Il modo in cui sono rappresentati in memoria. Organizzazione può essere:
- Fisica (come sono memorizzati su memoria di massa, impatta sulla logica)
  - supporti ad accesso sequenziale (nastri)
  - supporti ad accesso diretto (dischi)
- Logica (dipende dalla fisica)
  - Sequenziale
  - Sequenziale ad indici
  - Ad accesso diretto

Operazioni su file: apro, scrivo, leggo, appendo, cancello, creo, chiudo...
OPERAZIONI SUGLI ARCHIVI
- Ricerca
- Interrogazione
- Manipolazione
  - INSERT INTO
  - UPDATE (o ALTER)
  - DELETE
- Operazioni globali
  - SELECT
  - ORDER BY
  - JOIN

SCELTA DELL'ORGANIZZAZIONE DELL'ARCHIVIO (dipende da):
- tipo di supporto fisico su cui sarà memorizzato il file
- tipo di operazioni da effettuare sugli archivi
- tempi e metodi di elaborazione (lenti o veloci)
- linguaggio di programmazione

LIMITI DEGLI ARCHIVI CLASSICI
All'inizio per archivi si usavano file con diverso tipo di accesso, ma avevano dei limiti. Avevano un'organizzazione logica diversa:
1) Gestione ordini  --> org logica 1 --> org fisica (1) -\
2) Gestione fatture --> org logica 2 --> org fisica (2) --> Archivio dipendente dal tipo di applicazione
3) Gestione clienti --> org logica 3 --> org fisica (3) -/
PROBLEMA
Gestione fatture deve poter accedere a gestione clienti o ordini, ma avendo organizzazioni logiche diverse, non possono farlo se non a mano.
SOLUZIONE
1) 1 unico contenitore di dati (archivio, poi base di dati)
2) 1 unico programma di gestione archivio o DBMS (DataBase Management System) 

#############################################################################################################################################################################################################################################################################################################################################################################

DATABASE

BASE DI DATI
Una raccolta di dati logicamente correlati, usata per modellare una realtà. 
I dati sono memorizzati su memoria di massa e progettati per essrre fruiti in maniera ottimizzata da differenti applicazioni e utenti diversi.

SQL (Structured Query Language)
Linguaggio di interrogazione usato dai DBMS relazionali
I DB relazionali sono anche detti ACID.

ACID
- Atomico --> transazioni 1 alla volta con lock
- Consistente --> dati memorizzati nelle tabelle sono coerenti tra loro
- Integro --> non ci sono dati "fake" (non mancano info...)
- Durevole --> informazioni sono archiviate in modo duraturo nel tempo

NoSQL
Sono dei database che consentono memorizzazione ed esecuzione query non sulle tradizionali strutture di un DB relazionale SQL.

TIPI NoSQL:
- Key-Value
- Document
- Column-Family
- Graph

KEY-VALUE
La forma + semplice di db NoSQL, con uno modello di dati organizzato in KeyValuePairs.
Nel valore possono anche esserci dei dati non correlati tra loro o di tipo diverso.

DOCUMENTS
Questi archiviano i dati come documenti, generalmente in formati XML, JSON o BSON. (+ usato è MongoDB)

WIDE COLUMNS
Questi memorizzano le informazioni in colonne, consentendo agli utenti di accedere solo alle colonne che servono per allocare meno memoria inutile. Cerca di risolvere problemi con gli altri 2 tipi, ma sempre + complesso.

GRAPH
Questo ospita i dati in un grafo di conoscenza, memorizzando gli elementi come nodi, archi e proprietà. 
Nodi = oggetti/persone
Archi = definisce relazione tra nodi

VANTAGGI
- scalabilità --> mantiene performance all'aumentare della qtà di dati.
- velocità --> memorizzazione ed elaborazione piu rapide.
SVANTAGGI
- Non sono completamente ACID (o no o in parte)

#############################################################################################################################################################################################################################################################################################################################################################################

DBMS (DataBase Management System)
Software che si occupano della gestione dei database, quindi di gestione, memorizzazione e organizzazione dei dati.
(Insieme di programmi che gestiscono i dati (database) lasciando il loro uso ai programmi.
Con archivi classici, i programmi dovevano interfacciarsi con il file system, mentre ora è il DBMS che lo usa, quindi si colloca tra i file di dati (database) e i programmi
Quando i programmi necessitano dati, li richiedono al DBMS, che li preleva dalla base di dati col fyle system e li restituisce ai richiedenti.
DBMS + usati: Oracle, SQL Server, MySQL.

FUNZIONAMENTO
Gestione DB
Permette operazioni di CREATE, INSERT, UPDATE e SELECT (...) tramite interfacce semplici e intuitive
Consistenza
Garantisce la validità delle info nel db
Integrità dei dati
Garantisce l’integrità dei dati con vincoli di consistenza e validazione input
Eliminazione ridondanze
Evita la ridondanza (e la controlle se serve)
Sicurezza e protezione dati
Garantisce privatezza di dati con password e crittografia delle info
Supporto di transazioni
| TRANSAZIONE
| Sequenza di operazioni effettuate su un db che può concludersi con successo (quindi modifiche al db) o insuccesso (db rimane come prima)
Protezione guasti e ripristino
Effettua backups, memorizza transazioni e ha meccanismi di disaster recovery
Accesso concorrente
Garantisce accesso ai dati e aggiornamenti concorrenti, impedendo eventuali inconsistenze nel db
Gestione dizionario dei dati
Contiene metadati, ovvero info che descrivono gli oggetti del db (nomi tabellem attributi, relazioni, vincoli, auth...)
Indipendenza dei dati
Nasconde la reale organizzazione dei dati nei supporti fisici di memoria, grazie a architettura a 3 livelli:
- View (o sottoschemi),
- Schema logico,
- Schema fisico.
E garantisce una visione astratta del db (uso di + utenti)

LIVELLI DI ASTRAZIONE DI UN DBMS
Sono 3, e permettono al DBMS di nascondere la reale organizzazione dei dati nei supporti fisici di memoria.
Esterno (Applicativo)
E' come i dati vengono mostrati agli utenti (sempre mantenendo la loro organizzazione logica e fisica, ma mostrati secondo il formato richiesto). Sono gli stessi utenti che a seconda dell'uso modificano la visualizzazione dei dati.
Descrive i dati come sono visti da applicazioni o utenti (e fornisce strumenti per modificare e vedere i dati, quindi ci operano i singoli utenti del db)
Logico
E' come i dati sono organizzati e correlati logicamente nel database. Comprende tabelle, chiavi, relazioni, campi... . Il programmatore si occupa di questi e li gestisce.
Descrive gli oggetti di interesse per programmi, offrendo rappresentazione precisa dell'organizzazione dei dati (...)
Fisico (Interno)
E' come i dati sono memorizzati sul supporto fisico (memoria di massa), o collezione di files nella memoria di massa. Questo è gestito dal DBA (Database Administrator). 
Descrive strutture fisiche di archivi che formano il database.

VIEW (VISTA)
Visione astratta di una parte del database creata apposta (su misura) per l'utente. Queste permettono di presentare in modi diversi i dati, dando una visualizzazione personalizzata del database.

INDIPENDENZA DEI DATI (permessa al DBMS dall'organizzazione a 3 livelli)
FISICA
Con questa i programmi sono indipendenti dai dati fisici, ovvero, è possibile cambiare organizzazione fisica dei dati senza modificare i programmi stessi e le procedure che agiscono sul database. (Sposto un db da un disco a un altro)
LOGICA
Con questa si può modificare l'organizzazione logica (schema) dei dati o del database senza dover modificare i programmi interessati alla modifica.

LINGUAGGIO DB
(In generale SQL) ma si divide in sottolinguaggi:
A livello fisico
DMCL (Device Media Control Language) --> comandi o istruzioni che mi permettono di creare fisicamente files, strutture, dati, formati, memorizzazione, metodi di accesso... usato dal DB Administrator
A livello logico
DCL (Data Control Language) --> quello che gestisce e permette gli accessi al database (+ visibilità a certi dati)
DDL (Data Definition Language) --> linguaggio che permette di creare le tabelle e relazioni
Usati da programatori
A livello esterno
DML (Data Manipolation Language) --> linguaggio che permette di modificare i dati del DB
QL (Query Language) --> permette di interrogare il db con ricerche

UTENTI 
DBA (Database Administrator)
Gli è affidata la responsabilità di gestione di base di dati
- gestione e trattamento dati,
- definisce viste
- manutenzione db
- controlla disponibilità su memoria di massa
- implementa il DB fisico
PROGRAMMATORI
Creano programmi epr utilizzare i dati del DB
UTENTI AVANZATI
accedono al db per interrogazione o modifica con SQL
UTENTI SEMPLICI
Interrogano il database con interaffacce gia fatte (magari da programmatori)

Dato non è info finche non ha la chiave di interpretazione.
Dato = descrizione elementare di una cosa
Info = incremento di conoscenza fornito da un dato

Archivi classici hanno la key interpretaz in tracciato record (esterna)
DBMS la key di interpretazione è inclusa del database (interna)

SCHEMA
Chiave di interpretazione dei dati. Ovvero il significato che si attribuisce al dato per ricavare l'informazione.
Lo schema è statico

ISTANZA di schema o estenzione
L'insieme dei valori assunti dallo schema in un certo istante di tempo.
Le istanze sono dinamiche

CATEGORIA
Insieme di dati con la stessa chiave di interpretazione.

Es:
Nome tabella = articoli					= CATEGORIA
Nomi colonne (+ tipo, dimens...) = codice art, qta	= SCHEMA
Dati = (100, 23), (101, 12)				= ISTANZE 

OCCORRENZA
Insieme delle istanze delle categorie in un istante di tempo (in numero?)

















